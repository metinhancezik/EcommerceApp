<!DOCTYPE html>
<html lang="tr">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - Metinhan</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
</head>
<body>
    <header class="sticky-top">
        <nav class="navbar navbar-expand-lg navbar-light bg-light shadow-sm">
            <div class="container">
                <a class="navbar-brand" href="/">
                    <img src="~/images/magaza-logo.png" alt="EcommerceApp" height="30">
                </a>
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="collapse navbar-collapse" id="navbarNav">
                    <ul class="navbar-nav me-auto">
                        <li class="nav-item">
                            <a class="nav-link @(ViewContext.RouteData.Values["Action"]?.ToString() == "Home" ? "active" : "")" href="/">
                                <i class="fas fa-home"></i> Vitrin
                            </a>
                        </li>
                    </ul>
                    <ul class="navbar-nav">
                        <li class="nav-item">
                            <a class="nav-link @(ViewContext.RouteData.Values["Action"]?.ToString() == "Basket" ? "active" : "")"
                               href="@Url.Action("Basket", "Pages")">
                                <i class="fas fa-shopping-cart"></i> Sepetim
                            </a>
                        </li>
                        @if (User.Identity.IsAuthenticated)
                        {
                            <li class="nav-item">
                                <a class="nav-link @(ViewContext.RouteData.Values["Action"]?.ToString() == "Account" ? "active" : "")"
                                   href="@Url.Action("Account", "Pages")">
                                    <i class="fas fa-user"></i> Hesabım
                                </a>
                            </li>
                            <li class="nav-item">
                                <a href="#" class="nav-link" id="logoutButton">
                                    <i class="fas fa-sign-out-alt"></i> Çıkış Yap
                                </a>
                            </li>
                        }
                        else
                        {
                            <li class="nav-item">
                                <a class="nav-link @(ViewContext.RouteData.Values["Action"]?.ToString() == "Login" ? "active" : "")"
                                   href="@Url.Action("Login", "Pages")">
                                    <i class="fas fa-sign-in-alt"></i> Giriş Yap
                                </a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link @(ViewContext.RouteData.Values["Action"]?.ToString() == "Register" ? "active" : "")"
                                   href="@Url.Action("Register", "Pages")">
                                    <i class="fas fa-user-plus"></i> Kayıt Ol
                                </a>
                            </li>
                        }
                    </ul>
                </div>
            </div>
        </nav>
    </header>

    <div class="container-fluid px-0">
        <main role="main" class="pb-3">
            @RenderBody()
        </main>
    </div>

    <div id="paymentOverlay" class="overlay" style="display: none;">
        <div class="overlay-content">
            <div id="paymentStatusIcon"></div>
            <h2 id="paymentStatusMessage"></h2>
        </div>
    </div>

    <footer class="border-top footer text-muted mt-auto">
        <div class="container text-center py-3">
            &copy; @DateTime.Now.Year EcommerceApp. Tüm hakları saklıdır.
        </div>
    </footer>

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        $(document).ready(function () {
            $('#logoutButton').on('click', function (e) {
                e.preventDefault();
                var token = getCookie('auth_token');

                $.ajax({
                    url: '/api/logout',
                    type: 'POST',
                    contentType: 'application/json',
                    headers: {
                        'Authorization': 'Bearer ' + token
                    },
                    data: JSON.stringify({ token: token }), 
                    success: function (response) {
                        
                        document.cookie.split(";").forEach(function (c) {
                            document.cookie = c.replace(/^ +/, "").replace(/=.*/, "=;expires=" + new Date().toUTCString() + ";path=/");
                        });

                        window.location.href = '/Pages/Home';
                    },
                    error: function (xhr) {
                        console.error('Çıkış yapılırken hata oluştu:', xhr);
                        alert('Çıkış yapılırken bir hata oluştu. Lütfen tekrar deneyin.');
                    }
                });
            });
        });
       
        function getCookie(name) {
            var value = "; " + document.cookie;
            var parts = value.split("; " + name + "=");
            if (parts.length == 2) return parts.pop().split(";").shift();
        }
        function decodeHtmlEntities(text) {
            var textArea = document.createElement('textarea');
            textArea.innerHTML = text;
            return textArea.value;
        }

        function showPaymentStatus(status, message) {
            var overlay = document.getElementById('paymentOverlay');
            var statusIcon = document.getElementById('paymentStatusIcon');
            var statusMessage = document.getElementById('paymentStatusMessage');

            statusMessage.textContent = decodeHtmlEntities(message);

            if (status === 'success') {
                statusIcon.innerHTML = '✅';
                statusIcon.style.color = 'green';
            } else {
                statusIcon.innerHTML = '❌';
                statusIcon.style.color = 'red';
            }

            overlay.style.display = 'flex';

            setTimeout(function () {
                overlay.style.display = 'none';
            }, 5000);
        }

        var paymentStatus = '@TempData["PaymentStatus"]';
        var paymentMessage = '@Html.Raw(Json.Serialize(TempData["PaymentMessage"]))';

        if (paymentStatus && paymentMessage) {
            showPaymentStatus(paymentStatus, JSON.parse(paymentMessage));
        }
    </script>
    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>